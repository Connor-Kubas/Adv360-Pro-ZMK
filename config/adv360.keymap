
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
       &kp ESCAPE             &none      &none       &none            &none   &none                &none                                                                &mo 2   &none     &none   &none   &none   &none          &none
          &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD            &kp P   &kp Y                &none                                                                &none   &kp F     &kp G   &kp C   &kp R   &kp L          &none
            &mo 3             &kp A      &kp O       &kp E            &kp U   &kp I                &none       &none   &none                  &kp LGUI   &none          &none   &kp D     &kp H   &kp T   &kp N   &kp S      &kp ENTER
        &kp LSHFT             &kp Z      &kp Q       &kp J            &kp K   &kp X                                    &none                     &none                          &kp B     &kp M   &kp W   &kp V   &none  &kp RIGHT_ALT
 &kp LEFT_CONTROL             &none      &none    &kp LEFT  &kp RIGHT_ARROW                    &kp SPACE  &kp DELETE   &none                     &none   &mo 1  &kp BACKSPACE          &kp DOWN  &kp UP   &none   &none          &mo 4
            >;
        };

        layer_Numbers {
            bindings = <
 &kp EQUAL        &kp N1    &kp N2    &kp N3     &kp N4  &kp N5               &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB         &kp Q     &kp W     &kp E      &kp R   &kp T                &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC  &kp NUMBER_7    &kp N5    &kp N3     &kp N1  &kp N9                &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none  &kp N8      &kp N0        &kp N2         &kp N4           &kp N6    &kp SQT
 &kp LSHFT         &kp Z     &kp X     &kp C      &kp V   &kp B                                  &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2     &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp SPACE  &kp SPACE   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Symbols {
            bindings = <
 &trans            &trans         &trans            &trans             &trans          &trans               &trans                                                                 &trans         &trans      &trans                &trans                 &trans        &trans  &trans
 &trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES      &kp PERIOD               &trans                                                                 &trans  &kp AMPERSAND   &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp PERCENT  &trans
 &trans   &kp EXCLAMATION      &kp MINUS          &kp PLUS          &kp EQUAL        &kp HASH               &trans  &trans  &trans                  &trans          &trans         &trans       &kp PIPE   &kp COLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
 &trans         &kp CARET      &kp SLASH      &kp ASTERISK      &kp BACKSLASH  &kp UNDERSCORE                               &trans                  &trans                                     &kp TILDE  &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT  &trans
 &trans            &trans         &trans            &trans             &trans                            &kp SPACE  &trans  &trans                  &trans  &kp UNDERSCORE  &kp SEMICOLON                     &trans                &trans                 &trans        &trans  &trans
            >;
        };

        layer_Function {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &trans                                                  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

    };
};
